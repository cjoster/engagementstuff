#@ load("@ytt:overlay", "overlay")
#@ load("@ytt:data", "data")

#! This overlay lays down the a key and custom TLS certificate for the kube-api-server
#! and configures the api server to use it. The format of the `tls-sni-cert-key` argument is
#! /path/to/cert,/path/to/key[:dns.domain[,*.wildcard.domain[,...]]]. Note the
#! colon between the x509 material and the *OPTIONAL* DNS names. If DNS names are not specified
#! they will be extracted from the certificate. Specifying DNS names will override the
#! ones extracted.
#!
#! Intermediate certificates (and not the root CA) go in the cert file *after* the
#! host certificate.

#@overlay/match by=overlay.subset({"kind":"KubeadmControlPlane"}),expects="1+"
---
spec:
  #@overlay/match missing_ok=True
  kubeadmConfigSpec:
    files:
      #@overlay/append
      - content: #@ data.read("custom-apiserver.key")
        owner: root:root
        permissions: "0600"
        path: /etc/kubernetes/pki/custom-apiserver.key
      #@overlay/append
      - content: #@ data.read("custom-apiserver.crt")
        owner: root:root
        permissions: "0644"
        path: /etc/kubernetes/pki/custom-apiserver.crt
    clusterConfiguration:
      apiServer:
        extraArgs:
          #@overlay/match missing_ok=True
          tls-sni-cert-key: /etc/kubernetes/pki/custom-apiserver.crt,/etc/kubernetes/pki/custom-apiserver.key:foo.bar.com
